{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/roshansapkota/Desktop/CodeWithMosh/DoneWithIt/app/screens/MessagesScreen.js\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"../components/ListItem\";\nimport Screen from \"../components/Screen\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nvar initialMessages = [{\n  id: 1,\n  title: 'T1',\n  description: 'D1',\n  image: require(\"../assets/mosh.jpg\")\n}, {\n  id: 2,\n  title: 'T2',\n  description: 'D2',\n  image: require(\"../assets/mosh.jpg\")\n}, {\n  id: 3,\n  title: 'T3',\n  description: 'D3',\n  image: require(\"../assets/mosh.jpg\")\n}];\n\nfunction MessagesScreen(props) {\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    var newMessages = messages.filter(function (m) {\n      return m.id !== message.id;\n    });\n    setMessages(newMessages);\n  };\n\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.description,\n        image: item.image,\n        onPress: function onPress() {\n          return console.log(\"Message selected!\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ListItemSeparator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }\n      });\n    },\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 3,\n        title: 'T3',\n        description: 'D3',\n        image: require(\"../assets/mosh.jpg\")\n      }]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({});\nexport default MessagesScreen;","map":{"version":3,"sources":["/Users/roshansapkota/Desktop/CodeWithMosh/DoneWithIt/app/screens/MessagesScreen.js"],"names":["React","useState","ListItem","Screen","ListItemSeparator","ListItemDeleteAction","initialMessages","id","title","description","image","require","MessagesScreen","props","messages","setMessages","refreshing","setRefreshing","handleDelete","message","newMessages","filter","m","toString","item","console","log","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, StyleSheet, View} from 'react-native';\n\nimport ListItem from '../components/ListItem'; \nimport Screen from '../components/Screen';\nimport ListItemSeparator from '../components/ListItemSeparator';\nimport ListItemDeleteAction from '../components/ListItemDeleteAction';\n\nconst initialMessages = [\n    {\n        id: 1,\n        title: 'T1',\n        description: 'D1',\n        image: require('../assets/mosh.jpg')\n\n    },\n    {\n        id: 2,\n        title: 'T2',\n        description: 'D2',\n        image: require('../assets/mosh.jpg')\n\n    },\n    {\n        id: 3,\n        title: 'T3',\n        description: 'D3',\n        image: require('../assets/mosh.jpg')\n\n    },\n]\n\nfunction MessagesScreen(props){\n   const [messages, setMessages] =   useState(initialMessages);\n   const [refreshing, setRefreshing] = useState(false);\n\n    const handleDelete = (message) => {\n        //Delete the message from the messages\n        const newMessages = messages.filter(m => m.id !== message.id);\n        setMessages(newMessages);\n        //Call the server to delete it from the back end as well\n    }\n\n    return(\n        <Screen >\n            <FlatList\n            data = {messages}\n            keyExtractor = {message => message.id.toString()}\n            renderItem = {({item}) => (\n                <ListItem\n                    title = {item.title}\n                    subTitle = {item.description}\n                    image = {item.image}\n                    onPress = {() => console.log(\"Message selected!\", item)}\n                    renderRightActions = { () => \n                        <ListItemDeleteAction onPress = { () => handleDelete(item)}/>}\n            />\n            )}\n            ItemSeparatorComponent = {() => \n               <ListItemSeparator/>} \n               refreshing = {refreshing}\n               onRefresh = {() => {\n                   setMessages([\n                    {\n                        id: 3,\n                        title: 'T3',\n                        description: 'D3',\n                        image: require('../assets/mosh.jpg'),\n                    },\n                ])\n               }}\n            />\n        </Screen>\n    );\n}\n\nconst styles = StyleSheet.create({\n    \n})\n\nexport default MessagesScreen;"]},"metadata":{},"sourceType":"module"}